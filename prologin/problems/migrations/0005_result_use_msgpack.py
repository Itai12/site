# -*- coding: utf-8 -*-
# Generated by Django 1.10.8 on 2018-01-06 12:23
from __future__ import unicode_literals

from django.db import migrations

import prologin.utils.db


def json_to_msgpack(apps, schema_editor):
    SubmissionCode = apps.get_model('problems', 'SubmissionCode')
    alias = schema_editor.connection.alias
    for code in SubmissionCode.objects.using(alias).filter(result_json__isnull=False):
        code.result = code.result_json
        code.save()


def msgpack_to_json(apps, schema_editor):
    import json
    SubmissionCode = apps.get_model('problems', 'SubmissionCode')
    alias = schema_editor.connection.alias
    for code in SubmissionCode.objects.using(alias).filter(result__isnull=False):
        try:
            # dummy serialization to trigger TypeError (we're in a transaction, we cannot save() twice)
            json.dumps(code.result)
            code.result_json = code.result
        except TypeError:
            # JSON can not encode bytes
            print("Warning: {!r}: could not encode 'result' to JSON, using None".format(code))
            code.result_json = None
        code.save()


class Migration(migrations.Migration):
    dependencies = [
        ('problems', '0004_remove_python2'),
    ]

    operations = [
        migrations.RenameField(
            model_name='submissioncode',
            old_name='result',
            new_name='result_json',
        ),
        migrations.AddField(
            model_name='submissioncode',
            name='result',
            field=prologin.utils.db.MsgpackField(blank=True, null=True),
        ),
        migrations.RunPython(json_to_msgpack, msgpack_to_json),
    ]
